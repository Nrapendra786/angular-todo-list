{"ast":null,"code":"import { Router, ActivatedRoute } from \"@angular/router\";\n// import { routerNgProbeToken } from '@angular/router/src/router_module';\nimport { Location } from \"@angular/common\";\nimport { TodoDataService } from \"../service/todo-data.service\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\nimport { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../service/todo-data.service\";\nfunction ListToDosComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"You have successfully completed list: \", ctx_r0.deletedId, \". \", ctx_r0.descriptionOfCompletedList, \"\");\n  }\n}\nfunction ListToDosComponent_ng_container_2_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ListToDosComponent_ng_container_2_tr_17_Template_button_click_11_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.deleteThisById($event));\n    });\n    i0.ɵɵtext(12, \"delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ListToDosComponent_ng_container_2_tr_17_Template_button_click_14_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.getSingleTodoDetails($event));\n    });\n    i0.ɵɵtext(15, \"update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const list_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 8, list_r3.setDate, \"yyyy-MM-dd\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(list_r3.isDone ? \"yes\" : \"no\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", list_r3.id);\n    i0.ɵɵpropertyInterpolate(\"value\", list_r3.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"id\", list_r3.id);\n    i0.ɵɵpropertyInterpolate(\"value\", list_r3.description);\n  }\n}\nfunction ListToDosComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\", 16)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Descirption\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Target Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Is Past Due?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Action\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Update\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, ListToDosComponent_ng_container_2_tr_17_Template, 16, 11, \"tr\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.toDos);\n  }\n}\nfunction ListToDosComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 20)(2, \"div\", 21);\n    i0.ɵɵtext(3, \" Loading data or data is unavailable... \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListToDosComponent_div_18_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListToDosComponent_div_18_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListToDosComponent_div_18_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListToDosComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"form\", 23, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function ListToDosComponent_div_18_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const saveNewListForm_r5 = i0.ɵɵreference(2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(!saveNewListForm_r5.invalid && ctx_r0.saveNewList($event));\n    });\n    i0.ɵɵelementStart(3, \"div\", 24)(4, \"label\", 25);\n    i0.ɵɵtext(5, \"Describe it:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 26);\n    i0.ɵɵtemplate(7, ListToDosComponent_div_18_p_7_Template, 2, 0, \"p\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 24)(9, \"label\", 27);\n    i0.ɵɵtext(10, \"Target Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 28);\n    i0.ɵɵtemplate(12, ListToDosComponent_div_18_p_12_Template, 2, 0, \"p\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, ListToDosComponent_div_18_small_13_Template, 2, 0, \"small\", 4);\n    i0.ɵɵelementStart(14, \"button\", 29);\n    i0.ɵɵtext(15, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const saveNewListForm_r5 = i0.ɵɵreference(2);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.get(\"description\").hasError(\"required\") && saveNewListForm_r5.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.get(\"date\").hasError(\"required\") && saveNewListForm_r5.submitted);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.hasError(\"required\", \"formCtrlName\") && saveNewListForm_r5.submitted);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disableSubmitBtn);\n  }\n}\nfunction ListToDosComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"form\", 30, 1);\n    i0.ɵɵlistener(\"ngSubmit\", function ListToDosComponent_div_19_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const updateListForm_r7 = i0.ɵɵreference(2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(!updateListForm_r7.invalid && ctx_r0.updateAnItem($event));\n    });\n    i0.ɵɵelementStart(3, \"div\", 24)(4, \"label\", 25);\n    i0.ɵɵtext(5, \"Update the description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 31);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ListToDosComponent_div_19_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.updateDescription, $event) || (ctx_r0.updateDescription = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 24)(8, \"label\", 27);\n    i0.ɵɵtext(9, \"Update the target date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function ListToDosComponent_div_19_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.date = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 33)(13, \"button\", 34);\n    i0.ɵɵtext(14, \"update changes\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.updateDescription);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.updateDate);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.updateDate, \" \");\n  }\n}\nexport let ListToDosComponent = /*#__PURE__*/(() => {\n  class ListToDosComponent {\n    constructor(fb, _location, router, activatedRoute, todoService) {\n      this.fb = fb;\n      this._location = _location;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.todoService = todoService;\n      this.deletedSuccessfully = false;\n      this.loading = false;\n      this.addedList = false;\n      this.savedSuccess = false;\n      this.closeThisModal = false;\n      this.disableSubmitBtn = false;\n      this.showUpdateBtn = false;\n      this.payload = {};\n      this.updatedPayload = {};\n      this.name = sessionStorage.getItem(\"authenticateUser\");\n      this.form = new FormGroup({\n        description: new FormControl(\"\", Validators.required),\n        date: new FormControl(this.date, Validators.required),\n        isDone: new FormControl(this.isCompleted)\n      });\n    }\n    // PARENT\n    ngOnInit() {\n      this.name = this.activatedRoute.snapshot.params[\"name\"];\n      console.log(\"this is username \" + this.name);\n      this.loadAllList();\n    }\n    reloadList() {\n      if (this.addedList == true) {\n        this.savedSuccess = true;\n        this.loadAllList();\n      }\n    }\n    generateDate(date) {\n      let isoDate = new Date(date).toISOString();\n      console.log(\"this is date\" + isoDate);\n      return isoDate;\n    }\n    updateAnItem(event) {\n      event.preventDefault();\n      let id = parseInt(this.id);\n      this.generateDate(this.date);\n      this.updateDate = this.date.toLocaleString(\"en-US\", {\n        timeZone: \"America/New_York\"\n      });\n      this.updatedPayload.description = this.updateDescription;\n      this.updatedPayload.setDate = this.updateDate;\n      console.log(this.updateDate);\n      this.setIsDone(this.updateDate);\n      this.updatedPayload.isDone = this.isCompleted;\n      this.updatedPayload.id = id;\n      console.log(JSON.stringify(this.updatedPayload));\n      this.todoService.updateAnItem(this.name, this.updatedPayload.id, this.updatedPayload).subscribe(res => {\n        console.log(\"this is res \" + JSON.stringify(res));\n        this.loadAllList();\n      }, err => {\n        console.log(err);\n      });\n    }\n    saveNewList(event) {\n      console.log(\"saving\");\n      // event.preventDefault();\n      // this.generateDate(this.date);\n      this.payload.description = this.form.value.description;\n      this.payload.setDate = this.form.value.date;\n      this.setIsDone(this.form.value.date);\n      this.payload.isDone = this.form.value.isDone;\n      console.log(\"this is form value \" + JSON.stringify(this.form.value));\n      this.todoService.saveNewList(this.name, this.payload).subscribe(response => {\n        console.log(response);\n        this.resetForm();\n        this.loadAllList();\n        this.router.navigate([`/users/${this.name}/list-to-dos`]);\n      }, error => {\n        console.log(error);\n      });\n    }\n    setIsDone(date) {\n      let selectedDate = new Date(date);\n      let now = new Date();\n      console.log(\"selected Date \", selectedDate);\n      console.log(\"now Date \", now);\n      if (selectedDate < now) {\n        this.isCompleted = true;\n        // alert(\"true\");\n      } else {\n        this.isCompleted = false;\n        // alert(\"false\");\n      }\n      console.log(\"is completed \", this.isCompleted);\n    }\n    resetForm() {\n      this.disableSubmitBtn = true;\n      this.description = \"\";\n      this.date = \"\";\n    }\n    loadAllList() {\n      console.log(this.name);\n      this.todoService.retrieveAllTodos(this.name).subscribe(response => {\n        console.log(\"this is retrieve all \", response);\n        this.toDos = response;\n      }, error => {\n        this.loading = true;\n        console.log(\"error on retreive all \", error);\n      });\n    }\n    getSingleTodoDetails(event, id) {\n      this.showUpdateBtn = true;\n      console.log(event.target.id);\n      this.id = event.target.id;\n      this.todoService.getSingleTodoItem(this.name, this.id).subscribe(res => {\n        console.log(res);\n        let data = res;\n        console.log(data);\n        this.updateDescription = data.description;\n        this.updateDate = data.setDate;\n        this.payload.description = this.description;\n        this.payload.setDate = this.date;\n        this.payload.isDone = false;\n      }, err => {\n        console.log(err);\n      });\n    }\n    deleteThisById(event) {\n      this.descriptionOfCompletedList = event.target.value;\n      this.deletedId = event.target.id;\n      console.log(event.target.value);\n      this.todoService.deleteItemFromList(this.name, this.deletedId).subscribe(res => {\n        console.log(res);\n      });\n      this.deletedSuccessfully = true;\n      setTimeout(() => {\n        this.deletedSuccessfully = false;\n        this.todoService.retrieveAllTodos(this.name).subscribe(response => {\n          console.log(response);\n          this.toDos = response;\n          console.log(typeof this.toDos);\n        });\n      }, 3000);\n    }\n    // this.router.navigate([`users/${this.name}/list-to-dos`]);\n    goBackToWelcomePage() {\n      //navigate to last page\n      this.router.navigate([`/welcome/:${this.name}`]);\n    }\n    popModalOpen() {\n      this.closeThisModal = true;\n      this.showUpdateBtn = false;\n    }\n    static #_ = this.ɵfac = function ListToDosComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ListToDosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.TodoDataService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListToDosComponent,\n      selectors: [[\"app-list-to-dos\"]],\n      decls: 20,\n      vars: 5,\n      consts: [[\"saveNewListForm\", \"ngForm\"], [\"updateListForm\", \"ngForm\"], [1, \"container\", 2, \"margin-top\", \"80px\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"btn\", \"btn-info\", 2, \"margin-right\", \"20px\", 3, \"click\"], [\"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [\"class\", \"modal-body\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", 3, \"click\", \"id\", \"value\"], [\"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", 1, \"btn\", \"btn-info\", 3, \"click\", \"id\", \"value\"], [1, \"container\"], [1, \"alert\", \"alert-warning\"], [1, \"modal-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"description\"], [\"name\", \"description\", \"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Describe the activity\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"date\"], [\"name\", \"date\", \"type\", \"date\", \"id\", \"date\", \"placeholder\", \"Complete it on what date?\", \"formControlName\", \"date\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"ngSubmit\"], [\"name\", \"description\", \"type\", \"text\", \"id\", \"description\", \"placeholder\", \"Describe the activity\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"date\", \"type\", \"date\", \"id\", \"date\", \"placeholder\", \"Complete it on what date?\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function ListToDosComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 2);\n          i0.ɵɵtemplate(1, ListToDosComponent_div_1_Template, 3, 2, \"div\", 3)(2, ListToDosComponent_ng_container_2_Template, 18, 1, \"ng-container\", 4)(3, ListToDosComponent_ng_container_3_Template, 4, 0, \"ng-container\", 4);\n          i0.ɵɵelement(4, \"br\");\n          i0.ɵɵelementStart(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ListToDosComponent_Template_button_click_5_listener() {\n            return ctx.goBackToWelcomePage();\n          });\n          i0.ɵɵtext(6, \" \\u2B05\\uFE0F Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function ListToDosComponent_Template_button_click_7_listener() {\n            return ctx.popModalOpen();\n          });\n          i0.ɵɵtext(8, \" \\u2795 Add to lists\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"h5\", 11);\n          i0.ɵɵtext(14, \"Lets jot it here...\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 12)(16, \"span\", 13);\n          i0.ɵɵtext(17, \"\\u00D7\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(18, ListToDosComponent_div_18_Template, 16, 5, \"div\", 14)(19, ListToDosComponent_div_19_Template, 15, 3, \"div\", 14);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.deletedSuccessfully);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showUpdateBtn);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showUpdateBtn);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm, i1.FormGroupDirective, i1.FormControlName, i2.NgForOf, i2.NgIf, i2.DatePipe]\n    });\n  }\n  return ListToDosComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}